INSTALLING PYTHON 

Python is an open source programming language.  Here is a link to a packaged toolset, which you can download free via an academic license.  

https://www.anaconda.com/products/individual

You can install Anaconda via the link above, which supports a full Python environment. Anaconda is cross-platform.  I recommend you use Anaconda, but if you prefer installing manually, that is fine.


EDITING PYTHON FILES

You can run Python with Jupyter notebooks.  You can start Jupyter notebooks from Anaconda.  There is a Jupyter notebook file example_plot.ipynb which you can open and run.  Make sure data.txt is in the same folder as the Jupyter notebook. 

When you run the example code in a notebook the various variables will be defined, and if you may examine them in detail in new cells within the notebook. For example, if you have already run the example code, typing "x_data" lists a vector of the x data that was used in the plots.
      


VECTOR MATH

To make data processing easier, Python transparently processes variables as vectors and matrices.
For example, variable "experiment" is array of input data, "experiment[1]" is vector of all x values.
"x_values = linspace(1,20,10)" makes vector of 10 points equally spaced between 1 and 20.
"y_values = x_values**2" squares each data value in the x_values vector, producing a y_values vector.


TUTORIALS

Basic python operations:
https://docs.python.org/2/tutorial/

Lots of examples of plots:
http://matplotlib.org/gallery.html 


HELP

Typing ? in interactive mode will give help infomation.
Typing sin? describes how to use the sin() function
Google is your friend.
Also, see the documentation for python and functions in scipy and matplotlib at:
Scipy data analysis tutorial: http://scipy.org/Getting_Started
Scipy: http://docs.scipy.org/doc/
Python: http://docs.python.org/
Matplotlib: http://matplotlib.sourceforge.net/
